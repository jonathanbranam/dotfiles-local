
screenshots() {
  echo Setting screenshot folder to "$1"
  defaults write com.apple.screencapture location "$1"
}

# display 1 default

display() {
  local config=$1
  echo params: $#
  if [[ $# -ge 2 ]]
  then
    local options=$2
  else
    local options="default"
  fi
  echo Config: $config Options: $options

  if [[ $config = "1" ]]
  then
    if [[ $options = "default" ]]
    then
      displayplacer "id:577AC458-8531-59E0-E05B-35BB9AE56453 res:1920x1200 color_depth:4 scaling:on origin:(0,0) degree:0"
    elif [[ $options = "unscaled" ]]
    then
      displayplacer "id:577AC458-8531-59E0-E05B-35BB9AE56453 res:1680x1050 color_depth:4 scaling:on origin:(0,0) degree:0"
    fi
  elif [[ $config = "mcx-colab" ]]
  then
    if [[ $options = "default" ]]
    then
      echo colab default
      displayplacer "id:577AC458-8531-59E0-E05B-35BB9AE56453 res:1680x1050 color_depth:8 scaling:on origin:(0,0) degree:0" "id:CC25F679-A770-2BA2-53D6-61781B7FFDB8 res:3360x1890 hz:60 color_depth:8 scaling:on origin:(-3360,-72) degree:0"
    elif [[ $options = "unscaled" ]]
    then
      echo colab default
      displayplacer "id:577AC458-8531-59E0-E05B-35BB9AE56453 res:1680x1050 color_depth:8 scaling:on origin:(0,0) degree:0" "id:CC25F679-A770-2BA2-53D6-61781B7FFDB8 res:1920x1080 hz:60 color_depth:8 scaling:on origin:(-1920,-72) degree:0"
    else
      echo Unknown config option $options
    fi
  elif [[ $config = "mcx-home" ]]
  then
    if [[ $options = "default" ]]
    then
      echo home default
      displayplacer "id:577AC458-8531-59E0-E05B-35BB9AE56453 res:1680x1050 color_depth:8 scaling:on origin:(0,0) degree:0" "id:CC25F679-A770-2BA2-53D6-61781B7FFDB8 res:3360x1890 hz:60 color_depth:8 scaling:on origin:(1680,-840) degree:0"
    elif [[ $options = "unscaled" ]]
    then
      echo home unscaled
      displayplacer "id:577AC458-8531-59E0-E05B-35BB9AE56453 res:1680x1050 color_depth:8 scaling:on origin:(0,0) degree:0" "id:CC25F679-A770-2BA2-53D6-61781B7FFDB8 res:1920x1080 hz:60 color_depth:8 scaling:on origin:(1680,0) degree:0"
    else
      echo Unknown config option $options
    fi
  else
    echo Unknown config $config
  fi

}

svar_path="$HOME/.local/svar"
if [[ ! -d "$svar_path" ]]; then
  mkdir "$svar_path"
fi
svar() {
  local var_name="$1"
  local svar_filename="$svar_path/$var_name"

  # if the svar doesn't exist then don't return anything
  # this is consistent with env var expansion
  if [[ -f "$svar_filename" ]]; then
    cat "$svar_filename"
  fi
}

setsvar() {
  local var_name="$1"
  local var_value="$2"
  local svar_filename="$svar_path/$var_name"
  echo "$var_value" > "$svar_filename"
}

clearsvar() {
  local var_name="$1"
  local var_value="$2"
  local svar_filename="$svar_path/$var_name"
  if [[ -f "$svar_filename" ]]; then
    rm "$svar_filename"
  fi
}

# LifeOmic Laptop START

lifeomic-yarn() {
  ls "$(yarn global bin)" | grep lifeomic-
}

alias get-dev-vpn-access="node $HOME/work/repos/vpn-console-access-opener/src/local/get-vpn-access.js --profile lifeomic-dev"
alias get-infra-vpn-access="node $HOME/work/repos/vpn-console-access-opener/src/local/get-vpn-access.js --profile lifeomic-infra"

# LifeOmic Laptop END
