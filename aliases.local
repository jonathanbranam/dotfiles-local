
# Aliases

# From:
# https://code.isomemetric.net/ark/oh-my-zsh/-/tree/424b24761bcb639ee105535d927ff8205f6d2412/plugins/yarn
alias y="yarn"
alias ya="yarn add"
alias yad="yarn add --dev"
alias yap="yarn add --peer"
alias yb="yarn build"
alias ycc="yarn cache clean"
alias yga="yarn global add"
alias ygls="yarn global list"
alias ygrm="yarn global remove"
alias ygu="yarn global upgrade"
alias yh="yarn help"
alias yi="yarn init"
alias yin="yarn install"
alias yls="yarn list"
alias yout="yarn outdated"
alias yp="yarn pack"
alias yrm="yarn remove"
alias yrun="yarn run"
alias ys="yarn serve"
alias yst="yarn start"
alias yt="yarn test"
alias yuc="yarn global upgrade && yarn cache clean"
alias yui="yarn upgrade-interactive"
alias yup="yarn upgrade"

# Clear tmux history along with terminal, if running
alias clear='clear; if [[ -n $TMUX ]]; then tmux clear-history; fi'

# Functions

screenshots() {
  echo Setting screenshot folder to "$1"
  defaults write com.apple.screencapture location "$1"
}

# display 1 default

display() {
  local config=$1
  echo params: $#
  if [[ $# -ge 2 ]]
  then
    local options=$2
  else
    local options="default"
  fi
  echo Config: $config Options: $options

  if [[ $config = "1" ]]
  then
    if [[ $options = "default" ]]
    then
      # Not entirely sure about this, need to double check
      displayplacer "id:99DD39EE-2F20-8836-4656-8DD369F3C2E4 res:1792x1120 color_depth:4 scaling:on origin:(0,0) degree:0"
    elif [[ $options = "unscaled" ]]
    then
      # Not entirely sure about this, need to double check
      displayplacer "id:99DD39EE-2F20-8836-4656-8DD369F3C2E4 res:1792x1120 color_depth:4 scaling:on origin:(0,0) degree:0"
    fi
  elif [[ $config = "colab" ]]
  then
    if [[ $options = "default" ]]
    then
      echo colab default
      displayplacer "id:CC25F679-A770-2BA2-53D6-61781B7FFDB8 res:3360x1890 hz:60 color_depth:8 scaling:on origin:(0,0) degree:0" "id:99DD39EE-2F20-8836-4656-8DD369F3C2E4 res:1792x1120 hz:59 color_depth:4 scaling:on origin:(-1792,0) degree:0"
      # MetaCX laptop:
      # displayplacer "id:577AC458-8531-59E0-E05B-35BB9AE56453 res:1680x1050 color_depth:8 scaling:on origin:(0,0) degree:0" "id:CC25F679-A770-2BA2-53D6-61781B7FFDB8 res:3360x1890 hz:60 color_depth:8 scaling:on origin:(-3360,-72) degree:0"
    elif [[ $options = "unscaled" ]]
    then
      echo colab unscaled
      displayplacer "id:CC25F679-A770-2BA2-53D6-61781B7FFDB8 res:1920x1080 hz:60 color_depth:8 scaling:on origin:(0,0) degree:0" "id:99DD39EE-2F20-8836-4656-8DD369F3C2E4 res:1792x1120 hz:59 color_depth:4 scaling:on origin:(-1792,0) degree:0"
      # MetaCX laptop:
      # displayplacer "id:577AC458-8531-59E0-E05B-35BB9AE56453 res:1680x1050 color_depth:8 scaling:on origin:(0,0) degree:0" "id:CC25F679-A770-2BA2-53D6-61781B7FFDB8 res:1920x1080 hz:60 color_depth:8 scaling:on origin:(-1920,-72) degree:0"
    else
      echo Unknown config option $options
    fi
  elif [[ $config = "home" ]]
  then
    if [[ $options = "default" ]]
    then
      echo home default
      displayplacer "id:CC25F679-A770-2BA2-53D6-61781B7FFDB8 res:3360x1890 hz:60 color_depth:8 scaling:on origin:(0,0) degree:0" "id:99DD39EE-2F20-8836-4656-8DD369F3C2E4 res:1792x1120 hz:59 color_depth:4 scaling:on origin:(-1792,0) degree:0"
      # MetaCX laptop:
      # displayplacer "id:577AC458-8531-59E0-E05B-35BB9AE56453 res:1680x1050 color_depth:8 scaling:on origin:(0,0) degree:0" "id:CC25F679-A770-2BA2-53D6-61781B7FFDB8 res:3360x1890 hz:60 color_depth:8 scaling:on origin:(1680,-840) degree:0"
    elif [[ $options = "unscaled" ]]
    then
      echo home unscaled
      displayplacer "id:CC25F679-A770-2BA2-53D6-61781B7FFDB8 res:1920x1080 hz:60 color_depth:8 scaling:on origin:(0,0) degree:0" "id:99DD39EE-2F20-8836-4656-8DD369F3C2E4 res:1792x1120 hz:59 color_depth:4 scaling:on origin:(-1792,0) degree:0"
      # MetaCX laptop:
      # displayplacer "id:577AC458-8531-59E0-E05B-35BB9AE56453 res:1680x1050 color_depth:8 scaling:on origin:(0,0) degree:0" "id:CC25F679-A770-2BA2-53D6-61781B7FFDB8 res:1920x1080 hz:60 color_depth:8 scaling:on origin:(1680,0) degree:0"
    else
      echo Unknown config option $options
    fi
  else
    echo Unknown config $config
  fi

}

# LifeOmic Laptop START

lifeomic-yarn() {
  ls "$(yarn global bin)" | grep lifeomic-
}

alias get-dev-vpn-access="node $HOME/work/repos/vpn-console-access-opener/src/local/get-vpn-access.js --profile lifeomic-dev"
alias get-infra-vpn-access="node $HOME/work/repos/vpn-console-access-opener/src/local/get-vpn-access.js --profile lifeomic-infra"

export TEAM_CI_REVIEW=("-r" "RyanRatcliff" "-r" "simons5593" "-r" "atolivero" "-r" "samirhsnv")
alias prr='gh pr create -f -a @me ${TEAM_CI_REVIEW[@]}'
alias pr='gh pr create -f -a @me'

conda_setup() {
  echo Initializing conda
  # >>> conda initialize >>>
  # !! Contents within this block are managed by 'conda init' !!
  __conda_setup="$('/Users/jbranam/.pyenv/versions/miniconda3-4.7.12/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      if [ -f "/Users/jbranam/.pyenv/versions/miniconda3-4.7.12/etc/profile.d/conda.sh" ]; then
          . "/Users/jbranam/.pyenv/versions/miniconda3-4.7.12/etc/profile.d/conda.sh"
      else
          export PATH="/Users/jbranam/.pyenv/versions/miniconda3-4.7.12/bin:$PATH"
      fi
  fi
  unset __conda_setup
  # <<< conda initialize <<<
}



# LifeOmic Laptop END
